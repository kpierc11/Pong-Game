cmake_minimum_required(VERSION 3.30)
project(PongGame VERSION 1.0 LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

include(FetchContent)

# Function to fetch dependencies
function(include_dependency libName gitURL gitTag)
    FetchContent_Declare(${libName}
        GIT_REPOSITORY ${gitURL}
        GIT_TAG        ${gitTag}
        GIT_SHALLOW    TRUE
        GIT_PROGRESS   TRUE
    )
    FetchContent_MakeAvailable(${libName})
endfunction()

# SDL3 support
find_package(SDL3 QUIET)
if(NOT SDL3_FOUND)
    message(STATUS "Fetching SDL3 from GitHub")
    include_dependency(SDL3 https://github.com/libsdl-org/SDL.git release-3.2.18)
else()
    message(STATUS "Using locally installed SDL3")
endif()

# Define your executable
add_executable(PongGame
    src/main.cpp
    src/game.cpp
    src/paddle.cpp
    src/ball.cpp
)

# Include headers
target_include_directories(PongGame PRIVATE ${PROJECT_SOURCE_DIR}/include)

# Enable warnings (portable and safe)
if (MSVC)
    target_compile_options(PongGame PRIVATE /W4 /permissive- /utf-8)
else()
    target_compile_options(PongGame PRIVATE
        -Wall -Wextra -Wpedantic
        -Wconversion -Wsign-conversion
        -Wshadow -Wold-style-cast -Wnon-virtual-dtor
    )
endif()

# SDL3 linking
target_compile_definitions(PongGame PRIVATE SDL_MAIN_USE_CALLBACKS)
target_link_libraries(PongGame PRIVATE SDL3::SDL3)

# Windows: Copy SDL3 DLL after build
if (WIN32)
    add_custom_command(TARGET PongGame POST_BUILD
        COMMAND "${CMAKE_COMMAND}" -E copy_if_different
            "$<TARGET_FILE:SDL3::SDL3>"
            "$<TARGET_FILE_DIR:PongGame>"
        VERBATIM
    )
endif()
